Need to verify:true begin method@[<biz.bookdesign.librivox.JBook: void save(biz.bookdesign.librivox.BooksDbAdapter)>] lock method@[]

  public void save(BooksDbAdapter paramBooksDbAdapter)
  {
    paramBooksDbAdapter.newBook(this.mTitle, this.mAuthor, null, null, this.mLvid, null, this.mRating, this.mDescription);
    paramBooksDbAdapter.updateRating(this.mLvid, this.mRating);
    if ((this.mDescription != null) && (!"".equals(this.mDescription)))
      paramBooksDbAdapter.updateDescription(this.mLvid, this.mDescription);
    paramBooksDbAdapter.updateImage(this.mLvid, this.mImage);
    Iterator localIterator2;
    if (this.mReviews != null)
    {
      paramBooksDbAdapter.removeReviewsForBook(this.mLvid);
      localIterator2 = this.mReviews.iterator();
    }
    while (true)
    {
      int i;
      if (!localIterator2.hasNext())
        if ((this.mChapters != null) && (!paramBooksDbAdapter.chapterTableExists(this.mLvid)))
        {
          i = 1;
          paramBooksDbAdapter.createChapterTable(this.mLvid);
          BooksDbAdapter.mDb.beginTransaction();
        }
      try
      {
        String str = "contents_" + this.mLvid;
        DatabaseUtils.InsertHelper localInsertHelper = new DatabaseUtils.InsertHelper(BooksDbAdapter.mDb, str);
        int j = localInsertHelper.getColumnIndex("chid");
        int k = localInsertHelper.getColumnIndex("title");
        int m = localInsertHelper.getColumnIndex("url");
        int n = localInsertHelper.getColumnIndex("mimetype");
        int i1 = localInsertHelper.getColumnIndex("duration");
        Iterator localIterator1 = this.mChapters.iterator();
        while (true)
        {
          if (!localIterator1.hasNext())
          {
            localInsertHelper.close();
            BooksDbAdapter.mDb.setTransactionSuccessful();
            return;
            Review localReview = (Review)localIterator2.next();
            paramBooksDbAdapter.addReview(localReview.getBookId(), localReview.getRating(), localReview.getTitle(), localReview.getReviewerName(), localReview.getDate(), localReview.getText());
            break;
          }
          JChapter localJChapter = (JChapter)localIterator1.next();
          localInsertHelper.prepareForInsert();
          localInsertHelper.bind(j, i);
          localInsertHelper.bind(k, localJChapter.getTitle());
          localInsertHelper.bind(m, localJChapter.getLink());
          localInsertHelper.bind(i1, localJChapter.getDuration());
          localInsertHelper.bind(n, localJChapter.getReader());
          localInsertHelper.execute();
          i++;
        }
      }
      finally
      {
        BooksDbAdapter.mDb.endTransaction();
      }
    }
  }

